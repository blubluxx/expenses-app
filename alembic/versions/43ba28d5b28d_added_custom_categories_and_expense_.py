"""Added custom categories and expense category link

Revision ID: 43ba28d5b28d
Revises: b801f95ce4af
Create Date: 2025-03-25 01:51:58.753259

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "43ba28d5b28d"
down_revision: Union[str, None] = "b801f95ce4af"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "custom_category",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )

    op.create_table(
        "expense_category",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("global_category_id", sa.UUID(), nullable=True),
        sa.Column("custom_category_id", sa.UUID(), nullable=True),
        sa.CheckConstraint(
            "(global_category_id IS NOT NULL AND custom_category_id IS NULL) OR (global_category_id IS NULL AND custom_category_id IS NOT NULL)",
            name="check_only_one_category",
        ),
        sa.ForeignKeyConstraint(
            ["custom_category_id"],
            ["custom_category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["global_category_id"],
            ["category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )

    op.execute("""
        INSERT INTO expense_category (id, global_category_id)
        SELECT id, id FROM category;
    """)

    op.execute("""
        UPDATE expense_name
        SET category_id = ec.id
        FROM expense_category ec
        WHERE expense_name.category_id = ec.global_category_id;
    """)

    op.drop_constraint(
        "expense_name_category_id_fkey", "expense_name", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "expense_name", "expense_category", ["category_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "expense_name", type_="foreignkey")
    op.drop_constraint("expense_name_category_id_fkey", "expense_name")

    op.create_foreign_key(
        "expense_name_category_id_fkey",
        "expense_name",
        "category",
        ["category_id"],
        ["id"],
    )
    op.execute(
        "DELETE FROM expense_category WHERE id IN (SELECT category_id FROM expense_name);"
    )

    op.drop_table("expense_category")
    op.drop_table("custom_category")
    # ### end Alembic commands ###
