"""Fix value mapping for is_deleted

Revision ID: 56e33a22390f
Revises: 713e8e62b04b
Create Date: 2025-01-17 23:52:10.023947

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "56e33a22390f"
down_revision: Union[str, None] = "713e8e62b04b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
        UPDATE expense
        SET is_deleted = CASE
            WHEN is_deleted = 'True' THEN TRUE
            WHEN is_deleted = 'False' THEN FALSE
            ELSE NULL
        END
    """)

    op.execute("""
        UPDATE "user"
        SET is_deleted = CASE
            WHEN is_deleted = 'True' THEN TRUE
            WHEN is_deleted = 'False' THEN FALSE
            ELSE NULL
        END
    """)
    op.alter_column(
        "expense",
        "is_deleted",
        existing_type=sa.VARCHAR(),
        type_=sa.Boolean(),
        existing_nullable=False,
        postgresql_using="is_deleted::BOOLEAN",
    )
    op.alter_column(
        "user",
        "is_deleted",
        existing_type=sa.VARCHAR(),
        type_=sa.Boolean(),
        existing_nullable=False,
        postgresql_using="is_deleted::BOOLEAN",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "is_deleted",
        existing_type=sa.Boolean(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
        postgresql_using="is_deleted::VARCHAR",
    )
    op.alter_column(
        "expense",
        "is_deleted",
        existing_type=sa.Boolean(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
        postgresql_using="is_deleted::VARCHAR",
    )
    # ### end Alembic commands ###
